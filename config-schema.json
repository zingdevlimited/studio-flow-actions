{
  "title": "Studio Configuration Schema",
  "$schema": "https://json-schema.org/draft/2020-12/schema#",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "description": "Studio Configuration Schema URL"
    },
    "flows": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The friendlyName of the Studio Flow"
          },
          "path": {
            "type": "string",
            "description": "The path to the file of the Flow Definition JSON"
          },
          "sid": {
            "type": "string",
            "description": "(Optional) The sid of the existing Studio Flow resource"
          },
          "subflow": {
            "type": "boolean",
            "description": "(Optional) Set to true if this flow is called by other studio flows"
          },
          "allowCreate": {
            "type": "boolean",
            "description": "(Optional) Set to true to create the Studio Flow resource if it does not already exist"
          }
        },
        "required": [
          "name",
          "path"
        ],
        "additionalProperties": false
      },
      "description": "The list of Studio Flows to deploy"
    },
    "replaceWidgetTypes": {
      "type": "array",
      "items": {
        "enum": [
          "send-to-flex",
          "run-function",
          "run-subflow",
          "set-variables"
        ]
      },
      "description": "The list of widget types that can be updated on deployment",
      "uniqueItems": true
    },
    "functionServices": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The unique name of the Functions Service"
          },
          "environmentSuffix": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              },
              {
                "const": 0
              }
            ],
            "description": "The URL environment suffix. Set to null for production"
          },
          "pattern": {
            "type": "boolean",
            "description": "(Optional) Set to true to treat the name field as a Regex pattern. Useful for Service Names that are not deterministic (e.g. Library Function Services)"
          }
        },
        "required": [
          "name",
          "environmentSuffix"
        ],
        "additionalProperties": false
      },
      "description": "The list of function service instances that are referred to by the studio flows"
    },
    "workflowMap": {
      "type": "object",
      "description": "(Optional) Identifier (send-to-flex.attributes.workflowName) to Taskrouter Workflow sid map. If omitted, Friendly Name will be used as the identifier.",
      "patternProperties": {
        "^.*$": {
          "type": "string"
        }
      }
    },
    "subflowMap": {
      "type": "object",
      "description": "(Optional) Identifier (run-subflow.parameters.subflowName) to Studio Subflow sid map. If omitted, Friendly Name will be used as the identifier.",
      "patternProperties": {
        "^.*$": {
          "type": "string"
        }
      }
    },
    "variableReplacements": {
      "type": "object",
      "description": "Key-value pairs of replacements that should be done on set-variable widgets",
      "patternProperties": {
        "^.*$": {
          "type": "string"
        }
      }
    },
    "customPropertyReplacements": {
      "type": "array",
      "description": "List of precise replacements where the widget name and property name is specified. Use for any cases not covered by other replacements",
      "items": {
        "type": "object",
        "properties": {
          "flowName": {
            "type": "string",
            "description": "The name of the flow (as defined in the flows array) to perform the replacement on"
          },
          "widgetName": {
            "type": "string",
            "description": "The name of the widget to perform the replacement on"
          },
          "propertyKey": {
            "type": "string",
            "description": "The key of the widget property (under .properties) that should be replaced"
          },
          "propertyValue": {
            "description": "The value the widget property should be replaced with"
          }
        },
        "required": [
          "flowName",
          "widgetName",
          "propertyKey",
          "propertyValue"
        ],
        "additionalProperties": false
      }
    },
    "enableShellVariables": {
      "type": "boolean",
      "description": "Set to true to evaluate any $VARIABLE_NAME references in the configuration file with envsubst"
    }
  },
  "required": [
    "flows",
    "replaceWidgetTypes"
  ],
  "additionalProperties": false
}